(this["webpackJsonpcommands-app"]=this["webpackJsonpcommands-app"]||[]).push([[6],{132:function(t){t.exports=JSON.parse('{"git":[{"text":"git --version","description":"To get version of git"},{"text":"git init","description":"Create an empty Git repository or reinitialize an existing one"},{"text":"git clone","description":"Clone a repository into a new directory"},{"text":"git add <path/to/file/file-name.ext>","description":"Add file contents to the index","alternateText":"git add ."},{"text":"git status","description":"Show the working tree status"},{"text":"git reset","description":"Reset current HEAD to the specified state"},{"text":"git mv","description":"Move or rename a file, a directory, or a symlink"},{"text":"git rm","description":"Remove files from the working tree and from the index"},{"text":"git stash","description":"Stash the changes in a dirty working directory away. The command saves your local modifications away and reverts the working directory to match the HEAD commit"},{"text":"git stash list","description":"List the stash entries that you currently have"},{"text":"git stash show [<stash>]","description":"Show the changes recorded in the stash entry as a diff between the stashed contents and the commit back when the stash entry was first created. When no <stash> is given, it shows the latest one"},{"text":"git stash pop [--index] [-q|--quiet] [<stash>]","description":"Remove a single stashed state from the stash list and apply it on top of the current working tree state"},{"text":"git stash apply [--index] [-q|--quiet] [<stash>]","description":"Like pop, but do not remove the state from the stash list. Unlike pop, <stash> may be any commit that looks like a commit created by stash push or stash create"},{"text":"git stash clear","description":"Remove all the stash entries"},{"text":"git stash drop [-q|--quiet] [<stash>]","description":"Remove all the stash entries"},{"text":"git --help","description":"To get help of git commands","alternateText":"git help"}],"npm":[{"text":"npm -v","description":"To get version of npm","alternateText":"npm --version"}],"windows":[{"text":"winver","description":"To get version of windows"}],"linux":[{"text":"lsb_release -a","description":"To get version of linux"}],"docker":[{"text":"docker -v","description":"To get version of docker","alternateText":"docker --version"}]}')},136:function(t,e,i){"use strict";i.r(e),i.d(e,"default",(function(){return f}));var n=i(44),s=i(45),o=i(2),a=i(0),r=i.n(a),c=i(102),h=i(159),d=i(119),p=i(132),l=function(t){return p[t]},g=r.a.lazy((function(){return Promise.all([i.e(4),i.e(8)]).then(i.bind(null,170))})),m=r.a.lazy((function(){return i.e(5).then(i.bind(null,166))})),u=Object(c.a)((function(t){return{root:{width:"100%",backgroundColor:t.palette.background.paper}}}));function f(t){var e=t.category,i=void 0===e?"git":e,a=t.filterText,c=u(),p=l(i),f=r.a.useState(1),x=Object(s.a)(f,2),w=x[0],v=x[1],y=r.a.useState(7),b=Object(s.a)(y,1)[0];r.a.useEffect((function(){v(1)}),[window.location.href]);var k=Object(n.a)(p).filter((function(t){return t.text.toLowerCase().includes(a.toLowerCase())})),j=k.length,T=k.splice((w-1)*b,b),O=j%b===0?0===j?1:parseInt(j/b):parseInt(j/b)+1;return Object(o.jsxs)(o.Fragment,{children:[Object(o.jsx)(h.a,{className:c.root,children:T.map((function(t,e){return Object(o.jsx)(g,{command:t,isLastItem:Boolean(e===T.length-1),filterText:a},Object(d.a)())}))}),Object(o.jsx)(m,{handleChange:function(t,e){v(e)},page:w,noOfPagesForPagination:O})]})}}}]);
//# sourceMappingURL=6.c127180f.chunk.js.map