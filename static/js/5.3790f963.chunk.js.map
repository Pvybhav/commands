{"version":3,"sources":["hooks/UseCommands.jsx","components/CommandsList.jsx"],"names":["UseCommands","category","Commands","CommandRow","React","lazy","useStyles","makeStyles","theme","root","width","backgroundColor","palette","background","paper","inline","display","CommandsList","filterText","classes","commands","List","className","filter","text","toLowerCase","includes","map","command","index","isLastItem","Boolean","length","uuid"],"mappings":"kxBAMeA,EAJK,SAAAC,GAClB,OAAOC,EAASD,ICEZE,EAAaC,IAAMC,MAAK,kBAAM,uDAE9BC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,MAAO,OAEPC,gBAAiBH,EAAMI,QAAQC,WAAWC,OAE5CC,OAAQ,CACNC,QAAS,cAIE,SAASC,EAAT,GAAyD,IAAD,IAAhChB,gBAAgC,MAArB,MAAqB,EAAdiB,EAAc,EAAdA,WACjDC,EAAUb,IACVc,EAAWpB,EAAYC,GAE7B,OACE,cAACoB,EAAA,EAAD,CAAMC,UAAWH,EAAQV,KAAzB,SACGW,EACEG,QAAO,qBAAGC,KACJC,cAAcC,SAASR,EAAWO,kBAExCE,KAAI,SAACC,EAASC,GAAV,OACH,cAAC1B,EAAD,CAEEyB,QAASA,EACTE,WAAYC,QAAQF,IAAUT,EAASY,OAAS,IAF3CC","file":"static/js/5.3790f963.chunk.js","sourcesContent":["import Commands from '../assets/data/Commands.json';\r\n\r\nconst UseCommands = category => {\r\n  return Commands[category];\r\n};\r\n\r\nexport default UseCommands;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport { v4 as uuid } from 'uuid';\r\nimport UseCommands from '../hooks/UseCommands';\r\nconst CommandRow = React.lazy(() => import('./CommandRow'));\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    // maxWidth: '90ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n}));\r\n\r\nexport default function CommandsList({ category = 'git', filterText }) {\r\n  const classes = useStyles();\r\n  const commands = UseCommands(category);\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {commands\r\n        .filter(({ text }) =>\r\n          text.toLowerCase().includes(filterText.toLowerCase()),\r\n        )\r\n        .map((command, index) => (\r\n          <CommandRow\r\n            key={uuid()}\r\n            command={command}\r\n            isLastItem={Boolean(index === commands.length - 1)}\r\n          />\r\n        ))}\r\n    </List>\r\n  );\r\n}\r\n"],"sourceRoot":""}