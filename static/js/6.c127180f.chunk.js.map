{"version":3,"sources":["hooks/UseCommands.jsx","components/CommandsList.jsx"],"names":["UseCommands","category","Commands","CommandRow","React","lazy","CommandPagination","useStyles","makeStyles","theme","root","width","backgroundColor","palette","background","paper","CommandsList","filterText","classes","commands","useState","page","setPage","noOfCommandsPerPage","useEffect","window","location","href","filteredCommands","filter","text","toLowerCase","includes","allCommandsLength","length","currentPageCommands","splice","noOfPagesForPagination","parseInt","List","className","map","command","index","isLastItem","Boolean","uuid","handleChange","event","value"],"mappings":"i+EAMeA,EAJK,SAAAC,GAClB,OAAOC,EAASD,ICEZE,EAAaC,IAAMC,MAAK,kBAAM,uDAC9BC,EAAoBF,IAAMC,MAAK,kBAAM,iCAErCE,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,MAAO,OAEPC,gBAAiBH,EAAMI,QAAQC,WAAWC,WAI/B,SAASC,EAAT,GAAyD,IAAD,IAAhCf,gBAAgC,MAArB,MAAqB,EAAdgB,EAAc,EAAdA,WACjDC,EAAUX,IACVY,EAAWnB,EAAYC,GAFwC,EAG7CG,IAAMgB,SAAS,GAH8B,mBAG9DC,EAH8D,KAGxDC,EAHwD,OAIvClB,IAAMgB,SAAS,GAAtCG,EAJ8D,oBAQrEnB,IAAMoB,WAAU,WACdF,EAAQ,KACP,CAACG,OAAOC,SAASC,OAEpB,IAAMC,EAAmB,YAAIT,GAAUU,QAAO,qBAAGC,KAC1CC,cAAcC,SAASf,EAAWc,kBAEnCE,EAAoBL,EAAiBM,OAErCC,EAAsBP,EAAiBQ,QAC1Cf,EAAO,GAAKE,EACbA,GAGIc,EACJJ,EAAoBV,IAAwB,EAClB,IAAtBU,EACE,EACAK,SAASL,EAAoBV,GAC/Be,SAASL,EAAoBV,GAAuB,EAE1D,OACE,qCACE,cAACgB,EAAA,EAAD,CAAMC,UAAWtB,EAAQR,KAAzB,SACGyB,EAAoBM,KAAI,SAACC,EAASC,GAAV,OACvB,cAACxC,EAAD,CAEEuC,QAASA,EACTE,WAAYC,QAAQF,IAAUR,EAAoBD,OAAS,GAC3DjB,WAAYA,GAHP6B,oBAOX,cAACxC,EAAD,CACEyC,aArCe,SAACC,EAAOC,GAC3B3B,EAAQ2B,IAqCJ5B,KAAMA,EACNgB,uBAAwBA","file":"static/js/6.c127180f.chunk.js","sourcesContent":["import Commands from '../assets/data/Commands.json';\r\n\r\nconst UseCommands = category => {\r\n  return Commands[category];\r\n};\r\n\r\nexport default UseCommands;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport { v4 as uuid } from 'uuid';\r\nimport UseCommands from '../hooks/UseCommands';\r\nconst CommandRow = React.lazy(() => import('./CommandRow'));\r\nconst CommandPagination = React.lazy(() => import('./CommandPagination'));\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    // maxWidth: '90ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function CommandsList({ category = 'git', filterText }) {\r\n  const classes = useStyles();\r\n  const commands = UseCommands(category);\r\n  const [page, setPage] = React.useState(1);\r\n  const [noOfCommandsPerPage] = React.useState(7);\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  React.useEffect(() => {\r\n    setPage(1);\r\n  }, [window.location.href]);\r\n\r\n  const filteredCommands = [...commands].filter(({ text }) =>\r\n    text.toLowerCase().includes(filterText.toLowerCase()),\r\n  );\r\n  const allCommandsLength = filteredCommands.length;\r\n\r\n  const currentPageCommands = filteredCommands.splice(\r\n    (page - 1) * noOfCommandsPerPage,\r\n    noOfCommandsPerPage,\r\n  );\r\n\r\n  const noOfPagesForPagination =\r\n    allCommandsLength % noOfCommandsPerPage === 0\r\n      ? allCommandsLength === 0\r\n        ? 1\r\n        : parseInt(allCommandsLength / noOfCommandsPerPage)\r\n      : parseInt(allCommandsLength / noOfCommandsPerPage) + 1;\r\n\r\n  return (\r\n    <>\r\n      <List className={classes.root}>\r\n        {currentPageCommands.map((command, index) => (\r\n          <CommandRow\r\n            key={uuid()}\r\n            command={command}\r\n            isLastItem={Boolean(index === currentPageCommands.length - 1)}\r\n            filterText={filterText}\r\n          />\r\n        ))}\r\n      </List>\r\n      <CommandPagination\r\n        handleChange={handleChange}\r\n        page={page}\r\n        noOfPagesForPagination={noOfPagesForPagination}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}