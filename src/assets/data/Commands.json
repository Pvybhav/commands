{
  "git": [
    {
      "text": "git --version",
      "description": "To get version of git"
    },
    {
      "text": "git init",
      "description": "Create an empty Git repository or reinitialize an existing one"
    },
    {
      "text": "git init [-q|--quiet]",
      "description": "Only print error and warning messages; all other output will be suppressed"
    },
    {
      "text": "git init --bare",
      "description": "Create a bare repository. If GIT_DIR environment is not set, it is set to the current working directory (it replaces '.git' folder with the value of GIT_DIR environment variable)"
    },
    {
      "text": "git init --separate-git-dir=<git dir>",
      "description": "Instead of initializing the repository as a directory to either $GIT_DIR or ./.git/, create a text file there containing the path to the actual repository. This file acts as filesystem-agnostic Git symbolic link to the repository. If this is reinitialization, the repository will be moved to the specified path (Creates a folder with the specified folder name and creates | updates folder path inside 'git_directory' file)"
    },
    {
      "text": "git init <git_dir>",
      "description": "It is same as 'git init --separate-git-dir=<git_dir>', but it do not create 'git_directory' file"
    },
    {
      "text": "git clone",
      "description": "Clone a repository into a new directory"
    },
    {
      "text": "git add <path/to/file/file-name.ext>",
      "description": "Add file contents to the index",
      "alternateCommands": ["git add ."]
    },
    {
      "text": "git status",
      "description": "Show the working tree status"
    },
    {
      "text": "git reset",
      "description": "Reset current HEAD to the specified state"
    },
    {
      "text": "git mv",
      "description": "Move or rename a file, a directory, or a symlink"
    },
    {
      "text": "git rm",
      "description": "Remove files from the working tree and from the index"
    },
    {
      "text": "git stash",
      "description": "Stash the changes in a dirty working directory away. The command saves your local modifications away and reverts the working directory to match the HEAD commit"
    },
    {
      "text": "git stash list",
      "description": "List the stash entries that you currently have"
    },
    {
      "text": "git stash show [<stash>]",
      "description": "Show the changes recorded in the stash entry as a diff between the stashed contents and the commit back when the stash entry was first created. When no <stash> is given, it shows the latest one"
    },
    {
      "text": "git stash pop [--index] [-q|--quiet] [<stash>]",
      "description": "Remove a single stashed state from the stash list and apply it on top of the current working tree state"
    },
    {
      "text": "git stash apply [--index] [-q|--quiet] [<stash>]",
      "description": "Like pop, but do not remove the state from the stash list. Unlike pop, <stash> may be any commit that looks like a commit created by stash push or stash create"
    },
    {
      "text": "git stash clear",
      "description": "Remove all the stash entries"
    },
    {
      "text": "git stash drop [-q|--quiet] [<stash>]",
      "description": "Remove all the stash entries"
    },
    {
      "text": "git --help",
      "description": "To get help of git commands",
      "alternateCommands": ["git help"]
    }
  ],
  "npm": [
    {
      "text": "npm -v",
      "description": "To get version of npm",
      "alternateCommands": ["npm --version"]
    },
    {
      "text": "npm login",
      "description": "Used to login to the terminal/command prompt",
      "alternateCommands": ["npm adduser"]
    },
    {
      "text": "npm login registry.npmjs.org",
      "description": "Login to the terminal/command prompt using npm registry.",
      "alternateCommands": ["npm adduser registry.npmjs.org"]
    },
    {
      "text": "npm whoami",
      "description": "To get the username of logged-in user"
    },
    {
      "text": "npm logout",
      "description": "To logout of the npm"
    },
    {
      "text": "npm logout registry.npmjs.org",
      "description": "To logout of the npm registry"
    },
    {
      "text": "npm <command> -h",
      "description": "To get quick help of the <command>",
      "alternateCommands": ["npm <command> --help"]
    },
    {
      "text": "npm help <term>",
      "description": "Search for help on <term>"
    },
    {
      "text": "npm -l",
      "description": "Display full usage info"
    },
    {
      "text": "npm star <package>",
      "description": "To add star to the specific <package>. Starring repeatedly has no additional effect"
    },
    {
      "text": "npm unstar <package>",
      "description": "To remove star to the specific <package>"
    },
    {
      "text": "npm ls",
      "description": "To list the packages and their peer dependencies in current directory"
    },
    {
      "text": "npm ls --depth=0",
      "description": "To list the packages without their peer dependencies in current directory"
    },
    {
      "text": "npm ls --prod",
      "description": "To list only the production packages and their peer dependencies in current directory"
    },
    {
      "text": "npm ping",
      "description": "Ping the configured or given npm registry and verify authentication",
      "alternateCommands": [
        "npm ping <registry_hostname>",
        "npm ping --registry=<registry_hostname>",
        "npm ping --registry=<registry_url>"
      ]
    },
    {
      "text": "npm bin",
      "description": "Print the folder where npm will install executables"
    },
    {
      "text": "npm bin -g",
      "description": "Print the folder where npm will install global executables",
      "alternateCommands": ["npm bin --global"]
    },
    {
      "text": "npm root",
      "description": "Print the effective node_modules folder to standard out"
    },
    {
      "text": "npm root -g",
      "description": "Print the effective global node_modules folder to standard out",
      "alternateCommands": ["npm root --global"]
    },
    {
      "text": "npm prefix",
      "description": "Print the local prefix to standard out. This is the closest parent directory to contain a package.json file or node_modules directory"
    },
    {
      "text": "npm prefix -g",
      "description": "Print the global prefix to standard out",
      "alternateCommands": ["npm prefix --global"]
    },
    {
      "text": "npm fund",
      "description": "To retrieve information on how to fund the dependencies of a given project"
    },
    {
      "text": "npm fund <package_name>",
      "description": "To open donation page of <package_name>"
    },
    {
      "text": "npm fund --json",
      "description": "To retrieve information on how to fund the dependencies of a given project in json format"
    },
    {
      "text": "npm docs <package_name>",
      "description": "This command tries to guess at the likely location of a package's documentation URL, and then tries to open it using the --browser config param. You can pass multiple package names at once. If no package name is provided, it will search for a package.json in the current folder and use the name property",
      "alternateCommands": ["npm home <package_name>"]
    },
    {
      "text": "npm docs .",
      "description": "Opens 'homepage' url which is given in 'package.json'. If not it tries to guess at the likely location of a package's documentation URL, and then tries to open it using the --browser config param. You can pass multiple package names at once. If no package name is provided, it will search for a package.json in the current folder and use the name property",
      "alternateCommands": ["npm home ."]
    }
  ],
  "windows": [
    {
      "text": "winver",
      "description": "To get version of windows"
    }
  ],
  "linux": [
    {
      "text": "lsb_release -a",
      "description": "To get version of linux"
    }
  ],
  "docker": [
    {
      "text": "docker -v",
      "description": "To get version of docker",
      "alternateCommands": ["docker --version"]
    },
    {
      "text": "docker login",
      "description": "Log in to a Docker registry (hub.docker.com)",
      "alternateCommands": [
        "docker login <host_name>",
        "docker login [<host_name>] [-u|--username] <user_name> [-p|--password] <password>",
        "docker login [<host_name>] [-u|--username] <user_name>"
      ]
    },
    {
      "text": "docker logout",
      "description": "Log out from a Docker registry"
    },
    {
      "text": "docker search <search_term>",
      "description": "Log out from a Docker registry"
    }
  ]
}
